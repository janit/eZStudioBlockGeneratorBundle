<?php

namespace {{ namespace }}\DependencyInjection;

{% block use_statements %}
use Symfony\Component\Config\Resource\FileResource;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\DependencyInjection\Extension\PrependExtensionInterface;
use Symfony\Component\HttpKernel\DependencyInjection\Extension;
use Symfony\Component\DependencyInjection\Loader;
use Symfony\Component\Yaml\Yaml;
{% endblock use_statements %}

/**
{% block phpdoc_class_header %}
 * This is the class that loads and manages your bundle configuration
{% endblock phpdoc_class_header %}
 *
 * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}
 */
{% block class_definition %}
class {{ bundle_basename }}Extension extends Extension implements PrependExtensionInterface
{% endblock class_definition %}
{
{% block class_body %}
    /**
     * {@inheritdoc}
     */
    public function load(array $configs, ContainerBuilder $container)
    {
        $configuration = new Configuration();
        $config = $this->processConfiguration($configuration, $configs);

        {% if format == 'yml' -%}
        $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
        $loader->load('services.yml');
        {%- elseif format == 'xml' or format == 'annotation' -%}
        $loader = new Loader\XmlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
        $loader->load('services.xml');
        {%- elseif format == 'php' -%}
        $loader = new Loader\PhpFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
        $loader->load('services.php');
        {%- endif %}
    }

    public function prepend(ContainerBuilder $container)
    {
        $container->prependExtensionConfig(
        'assetic', array('bundles' => array('{{ bundle_basename }}Bundle'))
        );

        $configFile = __DIR__."/../Resources/config/config_block.yml";
        $config = Yaml::parse(file_get_contents($configFile));
        $container->prependExtensionConfig('ez_systems_landing_page_field_type', $config);
        $container->addResource(new FileResource($configFile));
    }
{% endblock class_body %}
}
